//git other
git fetch origin //同步远程

//git config (-unset 清除配置项）
git config --global http.postBuffer 157286400 //设置上传的请求缓存区，【需要上传的项目根目录下，执行】（150g）
git config --global user.name ""
git config --global user.email ""
git config --global http.proxy
git config --global --unset http.proxy
git config --global -l (--list)

//git log
git log --oneline -3
git log --pretty=oneline
git log --author

//git branch
git fetch
git branch 列出所有本地分支
git branch -r 列出所有远程分支
git branch -a 列出所有本地分支和远程分支
git branch [branch-name] 新建一个分支，但依然停留在当前分支
git branch -b [branch-name] 新建一个分支，并切换到该分支
git branch --track [branch][remote-branch] 新建一个分支，与指定的远程分支建立追踪关系
git checkout [branch-name] 切换到指定分支，并更新工作区
git branch -d [branch-name] //删除分支  -D 强制删除
git push origin --delete [branch-name] 删除远程分支
git remote show origin #查看远程分支和本地分支的对应关系
git remote prune origin #删除远程已经删除过的分支

//git tag
git tag <tagName> //创建本地tag
git tag -a <tagName> <commitId> //以某次commit为基建tag ||给指定的某个commit号加tag
git tag -a <tagName> <commitId> -m "sss"
git tag -a tagName -m "my tag" //-a -m 为tag写备注
git push origin <tagName> //推送到远程仓库
git push origin --tags  //存在很多未推送的本地标签，想一次全部推送
git show <tagName> //查看本地某个 tag 的详细信息
git tag  | git tag -l //查看本地所有tag
git ls-remote --tags origin //查看远程所有 tag
git tag -d <tagName> /本地 tag 的删除
git push origin :<tagName> //远程 tag 的删除
git push origin :refs/tags/<tagName>
git checkout -b <branchName> <tagName> //检出